#BlueJ class context
comment0.target=FourthRatings
comment1.params=me\ r
comment1.target=double\ dotProduct(Rater,\ Rater)
comment1.text=public\ double\ getAverageByID(String\ id,\ int\ minimalRaters){\r\n\ \ \ \ \ \ \ \ ArrayList<Rater>\ myRaters\ \=\ RaterDatabase.getRaters();\r\n\ \ \ \ \ \ \ \ double\ avg\ \=\ 0.0;\r\n\ \ \ \ \ \ \ \ FirstRatings\ fr\ \=\ new\ FirstRatings();\r\n\ \ \ \ \ \ \ \ int\ num\ \=\ fr.numberOfRatingsOfMovie(id,\ myRaters);\r\n\ \ \ \ \ \ \ \ if(minimalRaters\ <\=\ num){\r\n\ \ \ \ \ \ \ \ \ \ \ \ for(Rater\ r\ \:\ myRaters){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(r.hasRating(id)){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ avg\ +\=\ r.getRating(id);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ avg\ \=\ avg/num;\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ avg;\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ ArrayList<Rating>\ getAverageRatings(int\ minimalRaters){\r\n\ \ \ \ \ \ \ \ ArrayList<String>\ movies\ \=\ MovieDatabase.filterBy(new\ TrueFilter());\r\n\ \ \ \ \ \ \ \ ArrayList<Rating>\ avgList\ \=\ new\ ArrayList<Rating>();\r\n\ \ \ \ \ \ \ \ for(String\ id\ \:\ movies){\r\n\ \ \ \ \ \ \ \ \ \ \ \ double\ avg\ \=\ getAverageByID(id,\ minimalRaters);\r\n\ \ \ \ \ \ \ \ \ \ \ \ //System.out.println(m.getID()\ +\ "\ has\ "\ +\ avg\ +\ "\ average\ rating.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ Rating\ r\ \=\ new\ Rating(id,\ avg);\r\n\ \ \ \ \ \ \ \ \ \ \ \ if(avg\ \!\=\ 0.0)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ avgList.add(r);\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ avgList;\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ ArrayList<Rating>\ getAverageRatingsByFilter(int\ minimalRaters,\ Filter\ filterCriteria){\r\n\ \ \ \ \ \ \ \ ArrayList<Rating>\ list\ \=\ new\ ArrayList<Rating>();\r\n\ \ \ \ \ \ \ \ ArrayList<String>\ movieIDs\ \=\ MovieDatabase.filterBy(filterCriteria);\r\n\ \ \ \ \ \ \ \ for(String\ id\ \:\ movieIDs){\r\n\ \ \ \ \ \ \ \ \ \ \ \ double\ avg\ \=\ getAverageByID(id,\ minimalRaters);\r\n\ \ \ \ \ \ \ \ \ \ \ \ Rating\ r\ \=\ new\ Rating(id,\ avg);\r\n\ \ \ \ \ \ \ \ \ \ \ \ if(avg\ \!\=\ 0.0)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ list.add(r);\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ list;\r\n\ \ \ \ }\ \r\n
comment2.params=id
comment2.target=java.util.ArrayList\ getSimilarities(java.lang.String)
comment3.params=id\ numSimilarRaters\ minimalRaters
comment3.target=java.util.ArrayList\ getSimilarRatings(java.lang.String,\ int,\ int)
comment4.params=id\ numSimilarRaters\ minimalRaters\ filterCriteria
comment4.target=java.util.ArrayList\ getSimilarRatingsByFilter(java.lang.String,\ int,\ int,\ Filter)
numComments=5
